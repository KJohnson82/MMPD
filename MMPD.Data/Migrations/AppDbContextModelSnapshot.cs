// <auto-generated />
using System;
using MMPD.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MMPD.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("MMPD.Data.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("DeptEmail")
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeptFax")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeptManager")
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeptPhone")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<int>("Location")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RecordAdd")
                        .HasColumnType("DATETIME DEFAULT CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Location");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MMPD.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("CellNumber")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Department")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpAvatar")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsManager")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Location")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NetworkId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RecordAdd")
                        .HasColumnType("DATETIME DEFAULT CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Department");

                    b.HasIndex("Location");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MMPD.Data.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AreaManager")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Hours")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("LocNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Loctype")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RecordAdd")
                        .HasColumnType("DATETIME DEFAULT CURRENT_TIMESTAMP");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("StoreManager")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Loctype");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MMPD.Data.Models.Loctype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("LoctypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Loctypes");
                });

            modelBuilder.Entity("MMPD.Data.Models.Department", b =>
                {
                    b.HasOne("MMPD.Data.Models.Location", "DeptLocation")
                        .WithMany("Departments")
                        .HasForeignKey("Location")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeptLocation");
                });

            modelBuilder.Entity("MMPD.Data.Models.Employee", b =>
                {
                    b.HasOne("MMPD.Data.Models.Department", "EmpDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("Department");

                    b.HasOne("MMPD.Data.Models.Location", "EmpLocation")
                        .WithMany("Employees")
                        .HasForeignKey("Location");

                    b.Navigation("EmpDepartment");

                    b.Navigation("EmpLocation");
                });

            modelBuilder.Entity("MMPD.Data.Models.Location", b =>
                {
                    b.HasOne("MMPD.Data.Models.Loctype", "LocationType")
                        .WithMany("Locations")
                        .HasForeignKey("Loctype")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocationType");
                });

            modelBuilder.Entity("MMPD.Data.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MMPD.Data.Models.Location", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MMPD.Data.Models.Loctype", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
