@* // Pages/MetalMartStore.razor *@
@page "/metalmart/{storeID:int}"
@using MMPD.Data.Models
@using MMPD.Data.Context
@inject IDirectoryService DirectoryService
@using MMPD.Shared.Components
@using MMPD.Shared.Layout
@using MMPD.Data.Data
@using Telerik.Blazor
@using Telerik.Blazor.Components
@using Telerik.SvgIcons
@inject NavigationManager NavigationManager

<PageTitle>Metal Mart Store</PageTitle>

@if (Store == null)
{
    <p>Loading store...</p>
}
else
{

    <div class="flex flex-col h-screen">
        <section>
            @* <HeadInfoCard Info="StoreInfoCard" /> *@
            @* <StoreHeadCard StoreHeadCard="new() {
                    Title = Store.LocName,
                    Subtitle1 = "Store Manager",
                    Subtitle2 = "Area Manager",
                    Address = Store.Address,
                    City = Store.City,
                    State = Store.State,
                    Zip = Store.Zipcode.ToString(),
                    Email = Store.LocEmail,
                    StoreManager = Store.StoreManager,
                    AreaManager = Store.AreaManager
                }" /> *@
        </section>

        <div class="divide divide-none divide-y-2 py-0"></div>

        <section class="flex-grow bg-background justify-center overflow-y-scroll no-scrollbar">
            @* <section class="shadow-sm drop-shadow-sm">
                <UserBackButton />
            </section> *@

            <div class="store-card flex justify-center mt-4">
                <TelerikCard Class="w-full max-w-xl">
                    <CardHeader Class="bg-primary text-light text-uppercase">
                        <h2 class="text-2xl font-bold">@Store.LocName</h2>
                    </CardHeader>
                    <CardBody Class="bg-dark text-light ">
                        <div class="mb-2"><strong>Store Number:</strong> @Store.LocNum</div>
                        <div class="mb-2"><strong>Address:</strong> @Store.Address, @Store.City, @Store.State @Store.Zipcode</div>
                        <div class="mb-2"><strong>Phone:</strong> @Store.PhoneNumber</div>
                        @if (!string.IsNullOrWhiteSpace(Store.FaxNumber))
                        {
                            <div class="mb-2"><strong>Fax:</strong> @Store.FaxNumber</div>
                        }
                        <div class="mb-2"><strong>Email:</strong> <a href="mailto:@Store.Email">@Store.Email</a></div>
                        <div class="mb-2"><strong>Hours:</strong> @Store.Hours</div>
                        <div class="mb-2"><strong>Store Manager:</strong> @Store.StoreManager</div>
                        <div class="mb-2"><strong>Area Manager:</strong> @Store.AreaManager</div>
                    </CardBody>
                    <CardActions Class="bg-primary">
                        <TelerikButton OnClick="@GoBack" Icon="SvgIcon.ArrowLeft">Back</TelerikButton>
                    </CardActions>
                </TelerikCard>
            </div>
        </section>

        <div class="divide divide-none divide-y-2 py-0"></div>
        <section class="box-border mt-0 pb-3">
            <FooterNav Items="FooterNav" />
        </section>
    </div>

}

@code {
    [Parameter] public int storeID { get; set; }
    // private DataRoot? Data;
    private Location? Store;

    private HeaderCard StoreInfoCard = new();

    private List<FooterNav.FooterItem> FooterNav = new()
    {
        new FooterNav.FooterItem(CustomIcons.Home, "Home", "/"),
        new FooterNav.FooterItem(CustomIcons.Corporate, "Corporate", "/corporate"),
        new FooterNav.FooterItem(CustomIcons.MetalMart, "Metal Mart", "/metalmart"),
        new FooterNav.FooterItem(CustomIcons.ServiceCenter, "Service Center", "/servicecenter")
    };

    protected override async Task OnParametersSetAsync()
    {
        Store = await DirectoryService.GetLocationByIdAsync("metal mart", storeID);

    }

    private void GoBack()
    {
        // Implement navigation logic as needed, e.g.:
        NavigationManager.NavigateTo("/metalmart");
    }
}
