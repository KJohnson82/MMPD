@page "/corporate/{departmentID:int}"
@using MMPD.Data.Models
@using MMPD.Data.Context
@using MMPD.Data
@inject IDirectoryService DirectoryService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using MMPD.Shared.Components
@using MMPD.Shared.Layout
@using Telerik.Blazor
@using Telerik.Blazor.Components
@using Telerik.SvgIcons
@inject MMPD.Shared.Services.LayoutState LayoutState

<PageTitle>Department</PageTitle>

@if (Department == null)
{
    <p>No Data Available...</p>
}
else
{
    <div class="button-page-container">

        <div class="scrollable-wrapper">
            <TelerikListView  Data="@Department.Employees" EnableLoaderContainer="true" Class="button-list-container" Pageable="false" >
                <Template Context="emp">
                    <NavLink href="@($"/corporate/{departmentID}/{emp.Id}")" class=" text-decoration-none k-text-uppercase">
                        <div class="menu-item py-3 px-4 my-2 rounded-3 k-text-white tracking-wider k-font-size-lg" style="font-size: medium; font-weight: bold; letter-spacing: 2px;">
                            <div class="k-align-items-center">
                                @emp.FirstName @emp.LastName @if (emp.IsManager == true)
                                {
                                    <span class="k-color-warning ps-1 " ><TelerikSvgIcon Icon="@SvgIcon.Star" Size="@ThemeConstants.SvgIcon.Size.Large" /></span>
                                }
                            </div>
                            <div class="k-color-dark k-font-bold k-font-size-sm ">@emp.JobTitle</div>
                        </div>
                    </NavLink>
                </Template>
            </TelerikListView>
        </div>
    </div>
}

<style>
    
</style>

@code {
    [Parameter]
    public int departmentID { get; set; }

    private Department? Department;
    private HeaderCardModels.HeadInfoCardModel? DepartmentInfo;

    private List<FooterNav.FooterItem> FooterNavItems = new()
    {
        new FooterNav.FooterItem(CustomIcons.Home, "Home", "/"),
        // new FooterNav.FooterItem(CustomIcons.Corporate, "Corporate", "/corporate"),
        new FooterNav.FooterItem(CustomIcons.MetalMart, "Metal Mart", "/metalmart"),
        new FooterNav.FooterItem(CustomIcons.ServiceCenter, "Service Center", "/servicecenter"),
        new FooterNav.FooterItem(CustomIcons.Plant, "Plant", "/plant")
    };

    protected override async Task OnParametersSetAsync()
    {
        // Load the department first
        Department = await DirectoryService.GetDepartmentWithEmployeesAsync(departmentID);

        if (Department?.Employees != null)
        {
            Department.Employees = Department.Employees
                .OrderBy(e => e.FirstName)
                .ThenBy(e => e.LastName)
                .ToList();
        }

        // Use the ForDepartment static method from HeadInfoCardModel
        if (Department != null)
        {
            DepartmentInfo = HeaderCardModels.ForDepartment(
                title: Department.DeptName ?? "Department",
                phone: Department.DeptPhone,
                email: Department.DeptEmail,
                manager: Department.DeptManager
            );
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && DepartmentInfo != null)
        {
            LayoutState.SetHeader(DepartmentInfo);
            LayoutState.SetFooter(FooterNavItems);
        }
    }
}
