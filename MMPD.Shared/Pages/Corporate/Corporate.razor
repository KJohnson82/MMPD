@* 
Corporate departments directory page component.
Displays a scrollable list of all corporate departments as navigation buttons.
Serves as the main landing page for corporate section navigation.
Uses LayoutState to configure corporate-specific header and global footer navigation.
*@

@* Route definition for corporate section root *@
@page "/corporate"

@* Required dependency injections for page functionality *@
@inject IJSRuntime JSRuntime
@inject IDirectoryService DirectoryService
@inject NavigationManager NavigationManager
@inject MMPD.Shared.Services.LayoutState LayoutState

@* Required using statements for data models and UI components *@
@using MMPD.Data.Models
@using MMPD.Data.Context
@using MMPD.Shared.Components
@using MMPD.Shared.Layout
@using MMPD.Data
@using Telerik.Blazor
@using Telerik.Blazor.Components
@using Telerik.SvgIcons

@* Page title for browser tab/window *@
<PageTitle>Corporate</PageTitle>

@* ===== LOADING STATE ===== *@
@* Display loading message while departments data is being fetched *@
@if (Departments == null || Departments.Count == 0)
{
    <p>Loading corporate data...</p>
}
else
{
    @* ===== MAIN CONTENT CONTAINER ===== *@
    @* 
    Full-height container with scrollable department list.
    Uses flexible layout to fill available space minus header/footer.
    *@
    <div class="button-page-container">
        <div class="scrollable-wrapper">
            @* 
            Telerik ListView component for department navigation.
            Renders each department as a clickable navigation button.
            EnableLoaderContainer provides built-in loading states.
            *@
            <TelerikListView Data="@Departments" EnableLoaderContainer="true" Class="button-list-container">
                <Template Context="dept">
                    @* 
                    Navigation link for each department.
                    Routes to individual department detail pages.
                    Uses Blazor NavLink for SPA navigation with styling.
                    *@
                    <NavLink href="@($"/corporate/{dept.Id}")" class="k-text-no-underline k-shadow">
                        @* 
                        Department button with corporate styling.
                        Features gradient background, hover effects, and consistent spacing.
                        Uses Telerik CSS utility classes for layout and typography.
                        *@
                        <div class="menu-item rounded-3 k-d-flex k-flex-row k-text-uppercase k-font-size-lg k-font-semibold k-text-white k-justify-content-start k-align-items-center k-pl-10 k-bg-gradient k-py-6 hover:k-elevation-2">
                            @dept.DeptName
                        </div>
                    </NavLink>
                </Template>
            </TelerikListView>
        </div>
    </div>
}

@* ===== COMPONENT STYLING ===== *@
<style>
    /* ===== DEPARTMENT MENU ITEM STYLING ===== */
    .menu-item {
        background-color: #ff6358; /* Corporate red background color */
        margin: 8px 10px; /* Consistent spacing between items */
        border-radius: 0.75rem; /* Rounded corners for modern appearance */
        flex: 1; /* Flexible sizing within container */
        letter-spacing: 0.5px; /* Slight letter spacing for readability */
        /* padding: 10px 0; */ /* Commented out - using Telerik classes instead */
    }

        /* Menu item hover effects for interactive feedback */
        .menu-item:hover {
            transition: transform 0.2s ease-in, opacity 0.2s ease-in; /* Smooth transitions */
            transform: translateY(0) scale(0.95); /* Subtle scale-down effect on hover */
            background-color: #FA574B; /* Slightly different shade on hover */
        }

    /* ===== PAGE LAYOUT CONTAINERS ===== */
    /* Main page container with calculated height and flex layout */
    .button-page-container {
        height: calc(100% - 60px); /* Full height minus header/footer space */
        display: flex;
        flex-direction: column; /* Vertical stacking of child elements */
        background-color: var(--kendo-color-secondary-emphasis); /* Theme-aware background */
    }

    /* Button list container with scrollable content */
    .button-list-container {
        background-color: transparent !important; /* Override default ListView background */
        flex: 1; /* Grow to fill available space */
        display: flex;
        flex-direction: column; /* Vertical arrangement of buttons */
        margin: 1px 0; /* Minimal vertical margins */
        padding: 2px 0; /* Small vertical padding */
        overflow-y: auto; /* Enable vertical scrolling */
    }

    /* ===== SCROLLABLE CONTENT WRAPPER ===== */
    /* Wrapper that handles overflow and provides clean scrolling experience */
    .scrollable-wrapper {
        flex: 1; /* Grow to fill available space */
        overflow-y: auto; /* Enable vertical scrolling */
        margin: 1px 0; /* Minimal vertical margins */
        padding: 0px 0; /* No padding for edge-to-edge content */
        /* Hide scrollbar for cleaner appearance */
        scrollbar-width: none; /* Firefox scrollbar hiding */
        -ms-overflow-style: none; /* IE/Edge scrollbar hiding */
    }

        /* Webkit browsers (Chrome, Safari) scrollbar hiding */
        .scrollable-wrapper::-webkit-scrollbar {
            display: none; /* Completely hide scrollbar */
        }
</style>

@code {
    #region Private Properties

    /// <summary>
    /// Collection of corporate departments loaded from the database.
    /// Nullable to handle loading state before data is available.
    /// Sorted alphabetically by department name for consistent presentation.
    /// </summary>
    private List<Department>? Departments = new();

    /// <summary>
    /// Corporate location entity with related departments.
    /// Used to fetch all departments associated with corporate headquarters (location ID 1).
    /// </summary>
    private Location? corporate;

    /// <summary>
    /// Footer navigation items configuration for corporate section.
    /// Provides consistent navigation to main application sections.
    /// Uses custom icons for visual identification of each section.
    /// </summary>
    private List<FooterNav.FooterItem> FooterNavItems = new()
    {
        new FooterNav.FooterItem(CustomIcons.Home, "Home", "/"),
        new FooterNav.FooterItem(CustomIcons.MetalMart, "Metal Mart", "/metalmart"),
        new FooterNav.FooterItem(CustomIcons.ServiceCenter, "Service Center", "/servicecenter"),
        new FooterNav.FooterItem(CustomIcons.Plant, "Plant", "/plant")
    };

    #endregion

    #region Lifecycle Methods

    /// <summary>
    /// Component initialization method called when page loads.
    /// Fetches corporate location data and associated departments from the database.
    /// Corporate headquarters is identified by location ID 1.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        // Fetch corporate location (ID: 1) with all associated departments
        corporate = await DirectoryService.GetLocationWithDepartmentsAsync(1);

        // Extract and sort departments alphabetically for consistent presentation
        // Handles null cases gracefully with empty list fallback
        Departments = corporate?.Departments.OrderBy(d => d.DeptName).ToList() ?? new List<Department>();
    }

    #endregion

    #region Header Configuration

    /// <summary>
    /// Static header card configuration for corporate section.
    /// Contains corporate headquarters information including contact details.
    /// Used by LayoutState to display consistent corporate header across the section.
    /// </summary>
    private HeaderCardModels.HeadInfoCardModel CorporateHeadCard = new()
    {
        Title = "Corporate",                    // Main section title
        Address = "1500 Hamilton Rd",           // Corporate headquarters address
        City = "Bossier City",
        State = "LA",
        Zip = "71111",
        Subtitle1 = "Corp. Phone",              // Label for main phone number
        Phone = "(888) 245-3696",               // Main corporate phone number
        Subtitle2 = "Corp. Email",              // Label for corporate email
        Email = "info@mcelroymetal.com",        // Corporate contact email
        Subtitle3 = "IT Help Desk",             // Label for IT support
        Phone2 = "(866) 634-5111"               // IT help desk phone number
    };

    #endregion

    #region Layout State Management

    /// <summary>
    /// Post-render lifecycle method for configuring layout state.
    /// Sets up corporate-specific header and global footer navigation.
    /// Only executes on first render to avoid unnecessary state updates.
    /// </summary>
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            // Configure corporate header with contact information and branding
            LayoutState.SetHeader(CorporateHeadCard);

            // Set global footer navigation for section-to-section navigation
            LayoutState.SetFooter(FooterNavItems);
        }
    }

    #endregion
}