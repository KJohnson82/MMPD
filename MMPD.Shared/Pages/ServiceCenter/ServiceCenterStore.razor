@page "/servicecenter/{storeID:int}"
@using MMPD.Data.Models
@using MMPD.Data.Context
@inject IDirectoryService DirectoryService
@inject NavigationManager NavigationManager
@using MMPD.Shared.Components
@using MMPD.Shared.Layout
@using MMPD.Data.Data
@using Telerik.Blazor
@using Telerik.Blazor.Components
@using Telerik.SvgIcons
@inject MMPD.Shared.Services.LayoutState LayoutState

<PageTitle>Service Center Detail</PageTitle>

@if (Store == null)
{
    <p>Loading store...</p>
}
else
{
    <div class="button-page-container k-border-top-2 k-border-bottom-8 k-border-x-0 k-border-solid k-border-dark-subtle">
        <div class="scrollable-wrapper">

            <!-- Store Name Section -->
            <div class="store-name-section k-mb-2">
                <h1 class="store-name">
                    @Store.LocName.ToUpper()
                </h1>
                <p class="store-number">Store #@Store.LocNum</p>
            </div>

            <!-- Store Details Section -->
            <div class="store-details">
                @if (!string.IsNullOrWhiteSpace(Store.Address))
                {
                    <div class="detail-section">
                        <div class="detail-label">ADDRESS</div>
                        <div class="detail-value">
                            @Store.Address<br>
                            @Store.City, @Store.State @Store.Zipcode
                        </div>
                    </div>
                }

                @if (!string.IsNullOrWhiteSpace(Store.PhoneNumber))
                {
                    <div class="detail-section">
                        <div class="detail-label">PHONE</div>
                        <div class="detail-value">@Store.PhoneNumber</div>
                    </div>
                }

                @if (!string.IsNullOrWhiteSpace(Store.FaxNumber))
                {
                    <div class="detail-section">
                        <div class="detail-label">FAX</div>
                        <div class="detail-value">@Store.FaxNumber</div>
                    </div>
                }

                @if (!string.IsNullOrWhiteSpace(Store.Email))
                {
                    <div class="detail-section">
                        <div class="detail-label">EMAIL</div>
                        <div class="detail-value">@Store.Email</div>
                    </div>
                }

                @if (!string.IsNullOrWhiteSpace(Store.Hours))
                {
                    <div class="detail-section">
                        <div class="detail-label">HOURS</div>
                        <div class="detail-value">@Store.Hours</div>
                    </div>
                }

                @if (!string.IsNullOrWhiteSpace(Store.StoreManager))
                {
                    <div class="detail-section">
                        <div class="detail-label">STORE MANAGER</div>
                        <div class="detail-value">@Store.StoreManager</div>
                    </div>
                }

                @if (!string.IsNullOrWhiteSpace(Store.AreaManager))
                {
                    <div class="detail-section">
                        <div class="detail-label">AREA MANAGER</div>
                        <div class="detail-value">@Store.AreaManager</div>
                    </div>
                }
            </div>
        </div>
    </div>

    <style>
        .store-name-section {
            padding: 20px 20px;
            text-align: center;
            border-bottom: 2px solid var(--kendo-color-primary);
        }

        .store-name {
            color: var(--kendo-color-on-dark);
            font-size: xx-large;
            font-weight: bold;
            margin: 0 0 5px 0;
            letter-spacing: 2px;
        }

        .store-number {
            color: #ff6358;
            font-size: large;
            margin: 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .store-details {
            background-color: var(--kendo-color-dark);
            padding: 2px;
        }

        .detail-section {
            padding: 10px 0;
            padding-left: 40px;
        }

            .detail-section:last-child {
                border-bottom: none;
            }

        .detail-label {
            color: var(--kendo-color-warning);
            font-size: medium;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 8px;
            border-bottom: 2px solid var(--kendo-color-tertiary-on-surface);
        }

        .detail-value {
            color: white;
            font-size: medium;
            font-weight: normal;
            letter-spacing: 0.5px;
        }

        .button-page-container {
            height: calc(100% - 60px);
            display: flex;
            flex-direction: column;
            background-color: var(--kendo-color-dark);
            padding-bottom: 10px;
            padding-top: 10px;
        }

        .scrollable-wrapper {
            flex: 1;
            overflow-y: auto;
            padding: 0;
            scrollbar-width: none;
            -ms-overflow-style: none;
        }

            .scrollable-wrapper::-webkit-scrollbar {
                display: none;
            }
    </style>
}

@code {
    [Parameter]
    public int storeID { get; set; }

    private Location? Store;
    private HeaderCardModels.HeadInfoCardModel? StoreInfo;

    private List<FooterNav.FooterItem> FooterNavItems = new()
    {
        new FooterNav.FooterItem(CustomIcons.Home, "Home", "/"),
        new FooterNav.FooterItem(CustomIcons.Corporate, "Corporate", "/corporate"),
        new FooterNav.FooterItem(CustomIcons.MetalMart, "Metal Mart", "/metalmart"),
        new FooterNav.FooterItem(CustomIcons.ServiceCenter, "Service Center", "/servicecenter")
    };

    protected override async Task OnParametersSetAsync()
    {
        Store = await DirectoryService.GetLocationByIdAsync("service center", storeID);

        if (Store != null)
        {
            StoreInfo = HeaderCardModels.Employee(
                title: Store.LocName ?? "Service Center"
            );
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && StoreInfo != null)
        {
            LayoutState.SetHeader(StoreInfo);
            LayoutState.SetFooter(FooterNavItems);
        }
    }
}