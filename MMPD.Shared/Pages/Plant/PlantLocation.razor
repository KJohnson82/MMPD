@* 
Plant location detail page component displaying departments within a specific manufacturing plant.
Displays a scrollable list of all departments at the selected plant as navigation buttons.
Serves as an intermediate level in plant navigation: Plant Directory > Plant Location > Plant Departments.
Features plant-specific header information and department-based navigation structure.
*@

@* Route definition with location ID parameter for specific plant *@
@page "/plant/{locationID:int}"

@* Required using statements for data models and UI components *@
@using MMPD.Data.Models
@using MMPD.Data
@using MMPD.Data.Context
@using MMPD.Shared.Components
@using MMPD.Shared.Layout
@using Telerik.Blazor.Components

@* Required dependency injections for page functionality *@
@inject IDirectoryService DirectoryService
@inject NavigationManager NavigationManager
@inject MMPD.Shared.Services.LayoutState LayoutState

@* Page title for browser tab/window *@
<PageTitle>Plant Location</PageTitle>

@* ===== LOADING STATE ===== *@
@* Display loading message while plant location data is being fetched *@
@if (Plant == null)
{
    <p>Loading location...</p>
}
else
{
    @* ===== MAIN CONTENT CONTAINER ===== *@
    @* 
    Full-height container with scrollable plant departments list.
    Uses flexible layout to fill available space minus header/footer.
    Follows the same pattern as Corporate departments page for consistency.
    *@
    <div class="button-page-container">
        <div class="scrollable-wrapper">
            @* 
            Telerik ListView component for plant department navigation.
            Renders each department as a clickable navigation button.
            EnableLoaderContainer provides built-in loading state support.
            *@
            <TelerikListView Data="@Departments" EnableLoaderContainer="true" Class="button-list-container">
                <Template Context="dept">
                    @* 
                    Navigation link for each plant department.
                    Routes to individual plant department detail pages.
                    Uses three-level URL structure: /plant/{locationID}/{departmentID}
                    *@
                    <NavLink href="@($"/plant/{locationID}/{dept.Id}")" class="link-body-emphasis k-text-no-underline k-shadow">
                        @* 
                        Department button with plant-specific styling.
                        Features department name with consistent corporate typography and layout.
                        Uses Telerik CSS utility classes for professional appearance.
                        *@
                        <div class="menu-item k-d-flex k-flex-row k-text-uppercase k-font-size-lg k-font-semibold k-text-white k-justify-content-start k-align-items-center k-pl-10 k-bg-gradient k-py-6 hover:k-elevation-2">
                            @dept.DeptName
                        </div>
                    </NavLink>
                </Template>
            </TelerikListView>
        </div>
    </div>
}

@code {
    #region Route Parameters

    /// <summary>
    /// Location ID route parameter extracted from the URL.
    /// Used to load specific plant location data and its associated departments.
    /// Corresponds to Location.Id in the database for manufacturing plants.
    /// </summary>
    [Parameter]
    public int locationID { get; set; }

    #endregion

    #region Private Properties

    /// <summary>
    /// Manufacturing plant location entity with all plant information.
    /// Loaded from database using the locationID route parameter.
    /// Contains plant details and associated departments collection.
    /// </summary>
    private Location? Plant;

    /// <summary>
    /// Collection of departments within the selected manufacturing plant.
    /// Extracted from Plant.Departments and sorted alphabetically.
    /// Used to generate navigation buttons for each plant department.
    /// </summary>
    private List<Department> Departments = new();

    /// <summary>
    /// Header card model configured for plant location display.
    /// Generated using HeaderCardModels.Employee() factory method.
    /// Note: Using Employee method for simplicity - could be enhanced with plant-specific factory method.
    /// </summary>
    private HeaderCardModels.HeadInfoCardModel? PlantLocationInfo;

    /// <summary>
    /// Footer navigation items configuration for plant location section.
    /// Provides navigation to main application sections but excludes Plant
    /// since user is already in Plant section (prevents redundant navigation).
    /// </summary>
    private List<FooterNav.FooterItem> FooterNavItems = new()
    {
        new FooterNav.FooterItem(CustomIcons.Home, "Home", "/"),
        new FooterNav.FooterItem(CustomIcons.Corporate, "Corporate", "/corporate"),
        new FooterNav.FooterItem(CustomIcons.MetalMart, "Metal Mart", "/metalmart"),
        new FooterNav.FooterItem(CustomIcons.ServiceCenter, "Service Center", "/servicecenter")
        // Note: Plant navigation excluded since user is already in Plant section
    };

    #endregion

    #region Lifecycle Methods

    /// <summary>
    /// Parameter change handler called when route parameters change.
    /// Loads plant location data with departments and configures header information.
    /// Departments are sorted alphabetically for consistent presentation.
    /// </summary>
    protected override async Task OnParametersSetAsync()
    {
        // Load the specific plant location with its associated departments
        Plant = await DirectoryService.GetLocationWithDepartmentsAsync(locationID);

        if (Plant != null)
        {
            // Sort departments alphabetically for predictable navigation order
            // Consistent with Corporate departments sorting approach
            Departments = Plant.Departments.OrderBy(d => d.DeptName).ToList();

            // Create header info for the plant location using Employee factory method
            // Note: Using Employee method for simplicity - displays plant name as title
            // Could be enhanced with a dedicated plant location factory method
            PlantLocationInfo = HeaderCardModels.Employee(
                title: Plant.LocName ?? "Plant Location"     // Plant name as header title
            );
        }
    }

    /// <summary>
    /// Post-render lifecycle method for configuring layout state.
    /// Sets up plant location-specific header and global footer navigation.
    /// Only executes on first render to avoid unnecessary state updates.
    /// </summary>
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && PlantLocationInfo != null)
        {
            // Configure plant location header with plant name
            LayoutState.SetHeader(PlantLocationInfo);

            // Set global footer navigation for section-to-section navigation
            LayoutState.SetFooter(FooterNavItems);
        }
    }

    #endregion
}