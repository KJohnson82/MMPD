@page "/plant/{locationID:int}"
@using MMPD.Data.Models
@using MMPD.Data.Data
@using MMPD.Data.Context
@inject IDirectoryService DirectoryService
@using MMPD.Shared.Components
@using Telerik.Blazor.Components
@inject NavigationManager NavigationManager
@using MMPD.Shared.Layout

<PageTitle>Plant Location</PageTitle>

@if (Plant == null)
{
    <p>Loading location...</p>
}
else
{

    <div class="flex flex-col h-screen">
        <section>

        </section>

        <div class="divide divide-none divide-y-2 py-0"></div>

        <section class="flex-grow bg-neutral pb-0 pt-0 overflow-y-scroll no-scrollbar">
            <TelerikListView Data="@Departments" Class="ps-2 py-1 pe-2 border-4 border-transparent overflow-y-auto no-scrollbar">
                <Template Context="dept">
                    <div class="bg-primary text-white-content rounded-md shadow-md my-2 py-2 px-4 hover:shadow-lg hover:scale-105 transition">
                        <div class="text-xl font-semibold uppercase tracking-wide">@dept.DeptName</div>
                        @if (!string.IsNullOrWhiteSpace(dept.DeptManager))
                        {
                            <div class="text-sm mt-1">Manager: @dept.DeptManager</div>
                        }
                        @if (!string.IsNullOrWhiteSpace(dept.DeptPhone))
                        {
                            <div class="text-sm">Phone: @dept.DeptPhone</div>
                        }
                        @if (!string.IsNullOrWhiteSpace(dept.DeptEmail))
                        {
                            <div class="text-sm">Email: @dept.DeptEmail</div>
                        }

                        <div class="mt-2">
                            <NavLink class="text-white underline hover:text-blue-100"
                            href="@($"/plant/{locationID}/{dept.Id}")">
                                View Details
                            </NavLink>

                        </div>
                    </div>
                </Template>
            </TelerikListView>

        </section>

        <div class="divide divide-none divide-y-2 py-0"></div>
        <section class="box-border pb-3 mt-0">
            <FooterNav Items="FooterNav" />
        </section>
    </div>

}

@code {
    [Parameter] public int locationID { get; set; }
    private Location? Plant;
    private List<Department> Departments = new();
    private List<Location> Locations = new();

    private List<FooterNav.FooterItem> FooterNav = new()
    {
        new(CustomIcons.Home, "Home", "/"),
        new(CustomIcons.Corporate, "Corporate", "/corporate"),
        new(CustomIcons.MetalMart, "Metal Mart", "/metalmart"),
        new(CustomIcons.ServiceCenter, "Service Center", "/servicecenter")
    };

    protected override async Task OnInitializedAsync()
    {
        // var data = await DirectoryService.GetDataRootAsync();
        // if (data?.Loctype.TryGetValue("plant", out var plantGroup) == true)
        // {
        //     Plant = plantGroup.Locations.FirstOrDefault(l => l.Id == locationID);
        //     Departments = Plant?.Departments ?? new List<Department>();
        // }

        Locations = await DirectoryService.GetLocationsByTypeAsync("plant");
    }
}
