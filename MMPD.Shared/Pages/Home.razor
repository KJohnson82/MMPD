@page "/"
@using MMPD.Shared.Services
@using MMPD.Shared.Components
@using MMPD.Data.Data
@using MMPD.Data.Models
@inject IDirectoryService DirectoryService
@using Telerik.Blazor
@using Telerik.Blazor.Components
@using Telerik.SvgIcons
@inject NavigationManager NavigationManager
@using Telerik.SvgIcons
@inject IJSRuntime JSRuntime
@inject MMPD.Shared.Services.LayoutState LayoutState


<PageTitle>Employee Directory</PageTitle>

@* @if (Loctypes == null)
{
    <p>Loading...</p>
}
else
{ *@



<div class="button-page-container">
    <TelerikListView Data="@MenuItems" EnableLoaderContainer="true" Class="button-list-container mt-2 py-1">
        <Template Context="item">
            <NavLink href="@item.Path" class="button-link ">
                <div class="menu-item k-elevation-1 hover:shadow-lg">
                    <span class="k-text-uppercase k-text-white" style="font-size: xx-large; font-weight: bold;">
                        <TelerikSvgIcon Icon="@item.Icon" Size="@ThemeConstants.SvgIcon.Size.ExtraExtraLarge" Class="k-pb-2 k-pl-2 k-me-2" />
                        @item.Label
                    </span>
                </div>
            </NavLink>
        </Template>
    </TelerikListView>
</div>


<style>
    
    .button-page-container {
    height: 100%;
    display: flex;
    flex-direction: column;
    background-color: var(--kendo-color-secondary-emphasis);
}

.button-list-container {
    background-color: transparent !important;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
}

.button-link {
    flex: 1;
    display: flex;
    text-decoration: none;
    margin: 2px 3px;

}

.menu-item {
    background-color: #ff6358;
    border-radius: 0.25rem;
    padding: 32px 25px;
    flex: 1;
    display: flex;
    margin: 5px 0;
    /* align-items: center;
    justify-content: space-evenly; */
}

.menu-item:hover {
    transition: transform 0.2s ease-in, opacity 0.2s ease-in;
    transform: translateY(-0.25rem) scale(1.05);
    background-color: #FA574B;
}

.k-listview {
    background-color: transparent;
}

/* Keep your existing styles for body, no-scrollbar, etc. */

</style>

@code {
    private List<Loctype> Loctypes { get; set; } = new();

    protected override void OnAfterRender(bool firstRender)
    {
        LayoutState.SetHeader(CorporateHeadCard);
        LayoutState.SetFooter(FooterNav);
    }

    private HeaderCard.HeadInfoCardModel CorporateHeadCard = new()
        {
            Title = "Employee Directory",
            Address = "1500 Hamilton Rd",
            City = "Bossier City",
            State = "LA",
            Zip = "71111",
            Subtitle1 = "Corp. Phone",
            Phone = "(888) 245-3696",
            Subtitle2 = "Corp. Email",
            Email = "info@mcelroymetal.com",
            Subtitle3 = "IT Help Desk",
            Phone2 = "(866) 634-5111"
        };


    private class MenuItem
    {
        public ISvgIcon Icon { get; set; }
        public string Label { get; set; }
        public string Path { get; set; }
        public MenuItem(ISvgIcon icon, string label, string path)
        {
            Icon = icon;
            Label = label;
            Path = path;
        }
    }

    private IEnumerable<MenuItem> MenuItems = new List<MenuItem>()
    {
        // new(CustomIcons.Home, "Home", "/"),
        new(CustomIcons.Corporate, "Corporate", "/corporate"),
        new(CustomIcons.MetalMart, "Metal Mart", "/metalmart"),
        new(CustomIcons.ServiceCenter, "Service Center", "/servicecenter"),
        new(CustomIcons.Plant, "Plant", "/plant")
    };


    private List<FooterNav.FooterItem> FooterNav = new()
    {
        // new(CustomIcons.Home, "Home", "/"),
        new(CustomIcons.Corporate, "Corporate", "/corporate"),
        new(CustomIcons.MetalMart, "Metal Mart", "/metalmart"),
        new(CustomIcons.ServiceCenter, "Service Center", "/servicecenter"),
        new(CustomIcons.Plant, "Plant", "/plant")
    };

    

    
}