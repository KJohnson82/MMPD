@* 
Store-specific header card component designed for retail location displays.
Features a specialized layout showcasing store and area management information.
Uses the same grid layout pattern as other header cards but with store-specific content structure.
Optimized for MetalMart and Service Center store pages.
*@

@* Required using statements for Telerik components *@
@using Telerik.Blazor.Components
@using Telerik.Blazor

@* Inject navigation manager for URL-based logic *@
@inject NavigationManager NavManager

@* Only render content if store information is provided *@
@if (StoreInfo is not null)
{
    <div class="store-card-wrapper">
        @* 
        Telerik Grid Layout provides structured positioning with 4 rows (same pattern as other header cards):
        1. Title section (dynamic height based on title length)
        2. Divider section (2px fixed - empty for store styling)
        3. Content section (dynamic height for manager information)
        4. Search section (50px fixed)
        *@
        <TelerikGridLayout RowSpacing="1" ColumnSpacing="0" Class="store-grid-layout">
            <GridLayoutColumns>
                <GridLayoutColumn Width="1fr" />  
            </GridLayoutColumns>
            <GridLayoutRows>
                <GridLayoutRow Height="@GetTitleHeight()" />    
                <GridLayoutRow Height="2px" />                 
                <GridLayoutRow Height="@GetContentHeight()" />  
                <GridLayoutRow Height="50px" />                 
            </GridLayoutRows>
            <GridLayoutItems>

                @* ===== TITLE SECTION ===== *@
                <GridLayoutItem Row="1" Column="1" Class="store-title-item">
                    <div class="store-title">
                        @* Dynamic font sizing based on title length for optimal readability *@
                        <span class="title-text" style="font-size: @GetOptimalFontSize()">
                            @StoreInfo.Title
                        </span>
                    </div>
                </GridLayoutItem>

                @* ===== VISUAL DIVIDER (STORE STYLING) ===== *@
                <GridLayoutItem Row="2" Column="1">
                    @* 
                    Store styling: No visible divider between title and content
                    Divider element is commented out for cleaner store appearance
                    *@
                    @* <div class="divider"></div> *@
                </GridLayoutItem>

                @* ===== MANAGER INFORMATION SECTION ===== *@
                @* 
                Store-specific content layout featuring management hierarchy.
                Uses asymmetrical left/right layout to create visual interest and hierarchy.
                *@
                <GridLayoutItem Row="3" Column="1" Class="store-content-item">
                    <div class="info-section">
                        @* 
                        Store Manager section - positioned on the right side.
                        Features uppercase subtitle, decorative border, and manager name.
                        *@
                        @if (!string.IsNullOrWhiteSpace(StoreInfo.StoreManager))
                        {
                            <div class="contact-section-1">
                                <div class="section-subtitle">STORE MANAGER</div>
                                <div class="section-border"></div>
                                <div class="section-text">@StoreInfo.StoreManager.ToUpper()</div>
                            </div>
                        }

                        @* 
                        Area Manager section - positioned on the left side.
                        Features the same styling pattern but offset positioning for visual balance.
                        *@
                        @if (!string.IsNullOrWhiteSpace(StoreInfo.AreaManager))
                        {
                            <div class="contact-section-2">
                                <div class="section-subtitle">AREA MANAGER</div>
                                <div class="section-border"></div>
                                <div class="section-text">@StoreInfo.AreaManager.ToUpper()</div>
                            </div>
                        }
                    </div>
                </GridLayoutItem>

                @* ===== SEARCH SECTION ===== *@
                @* Fixed-height section containing the search bar component *@
                <GridLayoutItem Row="4" Column="1" RowSpan="2" Class="search-section-item">
                    @* SearchBar component for store-wide search functionality *@
                    @* Note: Back button logic commented out (was: ShowBackButton="!IsHomePage") *@
                    <SearchBar />
                </GridLayoutItem>
            </GridLayoutItems>
        </TelerikGridLayout>
    </div>
}

@code {
    #region Parameters

    /// <summary>
    /// Store information model containing title and management data.
    /// Simplified model compared to the comprehensive HeaderCardModels.HeadInfoCardModel.
    /// Focuses specifically on store identity and key personnel.
    /// </summary>
    [Parameter]
    public StoreTitleCardModel? StoreInfo { get; set; }

    #endregion

    #region Computed Properties

    /// <summary>
    /// Determines if the current page is the home page.
    /// Used for conditional display logic (currently not actively used).
    /// </summary>
    private bool IsHomePage
    {
        get
        {
            var relativePath = NavManager.ToBaseRelativePath(NavManager.Uri);
            return relativePath == "" || relativePath.Equals("home", StringComparison.OrdinalIgnoreCase);
        }
    }

    #endregion

    #region Dynamic Sizing Methods

    /// <summary>
    /// Calculates optimal title section height based on title length.
    /// Longer store titles get more vertical space to prevent truncation.
    /// Uses the same logic as other header card components for consistency.
    /// </summary>
    /// <returns>CSS height value for the title row</returns>
    private string GetTitleHeight()
    {
        // Longer store titles need more vertical space for proper display
        if (StoreInfo?.Title?.Length > 20)
            return "55px";
        return "50px";
    }

    /// <summary>
    /// Calculates content section height to fill remaining space.
    /// Adjusts based on title height to maintain consistent total layout height.
    /// Ensures adequate space for manager information display.
    /// </summary>
    /// <returns>CSS height value for the content row</returns>
    private string GetContentHeight()
    {
        // Calculate remaining height for store manager content section
        // Total: ~250px - Title (50-55px) - Divider (2px) - Search (50px) = ~143-148px
        if (StoreInfo?.Title?.Length > 20)
            return "148px";  // Less space when title takes more room
        return "153px";      // More space when title is compact
    }

    /// <summary>
    /// Determines optimal font size for the store title based on character length.
    /// Implements responsive typography to prevent overflow and maintain readability.
    /// Uses the same scaling algorithm as other header components for consistency.
    /// </summary>
    /// <returns>CSS font-size value</returns>
    private string GetOptimalFontSize()
    {
        if (StoreInfo?.Title == null) return "28px";

        int titleLength = StoreInfo.Title.Length;

        // Progressive font scaling based on store title length
        // Longer titles get smaller fonts to prevent overflow
        return titleLength switch
        {
            > 30 => "19px",  // Very long store titles - smallest font
            > 25 => "20px",  // Long store titles
            > 20 => "23px",  // Medium-long store titles
            > 15 => "26px",  // Medium store titles
            > 10 => "30px",  // Short-medium store titles
            _ => "34px"      // Short store titles - largest font
        };
    }

    #endregion

    #region Data Models

    /// <summary>
    /// Simplified data model specifically designed for store title card display.
    /// Contains only the essential information needed for store header presentation.
    /// More focused than the comprehensive HeaderCardModels.HeadInfoCardModel.
    /// </summary>
    public class StoreTitleCardModel
    {
        /// <summary>
        /// Store name or identifier displayed as the main title.
        /// Typically includes store location or branch identifier.
        /// </summary>
        public string Title { get; set; } = string.Empty;

        /// <summary>
        /// Name of the store manager responsible for day-to-day operations.
        /// Displayed in the right-aligned section with prominent styling.
        /// </summary>
        public string StoreManager { get; set; } = string.Empty;

        /// <summary>
        /// Name of the area manager overseeing multiple stores in the region.
        /// Displayed in the left-aligned section with offset positioning.
        /// </summary>
        public string AreaManager { get; set; } = string.Empty;
    }

    #endregion
}

@* ===== STORE CARD STYLING ===== *@
<style>
    /* ===== CSS VARIABLES ===== */
    /* Centralized color and theme management for store-specific styling */
    :root {
        --store-card-bg: #FF6666; /* Store card background color */
        --store-card-text: white; /* Store card text color */
        --divider-color: rgba(255, 255, 255, 0.3); /* Semi-transparent dividers */
    }

    /* ===== MAIN CONTAINER ===== */
    .store-card-wrapper {
        width: 100%;
        background-color: var(--kendo-color-primary); /* Uses Telerik theme primary color */
        color: var(--store-card-text);
        position: relative;
        overflow: hidden; /* Prevent content overflow */
    }

    .store-grid-layout {
        height: 100%;
        background-color: var(--kendo-color-primary);
    }

    /* ===== STORE TITLE SECTION ===== */
    .store-title-item {
        display: flex;
        align-items: center; /* Vertically center store title */
        justify-content: center; /* Horizontally center store title */
        background-color: var(--kendo-color-primary);
        height: 100%;
    }

    .store-title {
        width: 100%;
        text-align: center;
    }

    .title-text {
        font-weight: bold;
        text-transform: uppercase; /* Consistent uppercase styling for store branding */
        color: var(--store-card-text);
        line-height: 1.1; /* Tight line spacing for store titles */
        white-space: nowrap; /* Prevent store title wrapping */
        overflow: hidden; /* Hide overflow */
        text-overflow: ellipsis; /* Show "..." for overflow */
        max-width: 100%;
        padding: 0 8px;
        display: inline-block;
        letter-spacing: 0.02em; /* Slight letter spacing for store readability */
    }

    /* ===== VISUAL DIVIDERS ===== */
    .divider {
        width: 100%;
        height: 2px;
        border-bottom: solid 2px var(--kendo-color-primary-subtle);
        opacity: 0.25; /* Semi-transparent for subtle separation */
    }

    /* ===== STORE CONTENT LAYOUT ===== */
    /* Content layout matching HeadTitleCard dimensions for consistency */
    .store-content-item {
        padding: 4px 0; /* Same as header-content-item */
        overflow: hidden; /* Prevent content overflow */
        height: 100%;
        display: flex;
        align-items: flex-start; /* Same as header-content-item - align content to top */
    }

    .info-section {
        padding-top: 0.5rem; /* Top padding for visual spacing */
        width: 100%;
        display: flex;
        flex-direction: column; /* Stack manager sections vertically */
        gap: 4px; /* Same gap as content-container for consistency */
    }

    /* ===== MANAGER SECTIONS ===== */
    /* Store Manager Section - Right-aligned presentation */
    .contact-section-1 {
        margin-inline-end: 7rem; /* Large right margin for positioning (me-28 equivalent) */
        margin-top: 0; /* No top margin for first section */
        white-space: nowrap; /* Prevent text wrapping */
        text-align: right; /* Right-align store manager content */
    }

    /* Area Manager Section - Left-aligned presentation with offset */
    .contact-section-2 {
        margin-inline-start: 7rem; /* Large left margin for positioning (ms-28 equivalent) */
        margin-top: 0.75rem; /* Top margin for visual separation (mt-3 equivalent) */
        white-space: nowrap; /* Prevent text wrapping */
        text-align: left; /* Left-align area manager content */
    }

    /* ===== SECTION ELEMENT STYLING ===== */
    /* Section Subtitle Styling - Labels for manager roles */
    .section-subtitle {
        text-transform: uppercase; /* Uppercase for role titles */
        letter-spacing: 0.1em; /* Wide letter spacing for emphasis (tracking-wide) */
        font-weight: 500; /* Medium font weight (font-medium) */
        padding-inline-start: 1px; /* Minimal left padding (ps-[1px]) */
        margin-bottom: -0.5rem; /* Negative bottom margin for tight spacing (-mb-2) */
        padding-bottom: 0.375rem; /* Bottom padding for balance (pb-1.5) */
        color: var(--store-card-text);
    }

    /* Section Border - Decorative line below role titles */
    .section-border {
        border-bottom: 2px solid rgba(226, 232, 240, 0.45); /* Semi-transparent bottom border */
        margin: 0; /* No margins (m-0) */
        border-left: 0; /* No left border (border-x-0) */
        border-right: 0; /* No right border (border-x-0) */
    }

    /* Section Text - Manager names display */
    .section-text {
        margin-top: -6px; /* Negative top margin for tight spacing (-mt-[6px]) */
        text-transform: uppercase; /* Uppercase manager names for consistency */
        letter-spacing: normal; /* Normal letter spacing for readability (tracking-normal) */
        font-weight: normal; /* Normal font weight (font-normal) */
        padding-top: 0.375rem; /* Top padding for visual balance (pt-1.5) */
        padding-inline-start: 1px; /* Minimal left padding (ps-[1px]) */
        color: var(--store-card-text);
    }

    /* ===== SEARCH SECTION ===== */
    .search-section-item {
        background-color: rgba(0, 0, 0, 0.08); /* Subtle dark background */
        border-top: 1px solid var(--divider-color); /* Top border separator */
        height: 100%;
        align-items: center; /* Center search bar vertically */
    }

    /* ===== RESPONSIVE DESIGN (COMMENTED OUT) ===== */
    /*
        Responsive adjustments for smaller screens - currently commented out
        but preserved for potential future implementation
        */
    /*
        @@media (max-width: 480px) {
        .contact-section-1

    {
        margin-inline-end: 2rem;
        // Reduce from me-28 to smaller margin
    }

    .contact-section-2 {
        margin-inline-start: 2rem;
        // Reduce from ms-28 to smaller margin
    }

    .section-subtitle {
        font-size: 12px;
    }

    .section-text {
        font-size: 14px;
    }

    }
    */
</style>