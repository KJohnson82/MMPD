@using Telerik.Blazor.Components
@using Telerik.Blazor
@using MMPD.Data.Models
@using MMPD.Data.Context
@using MMPD.Data
@using MMPD.Shared.Components

@inject NavigationManager NavManager



@if (Info is not null)
{
    <div class="header-container grid">
        <!-- Title Section -->
        <div class="header-title">
            @Info.Title
        </div>
        <div class="divider"></div>
        <!-- Content Section -->
        <div class="header-content">
            <div class="header-info-grid">
                @if (!string.IsNullOrWhiteSpace(Info.Address))
                {
                    <div class="info-item address-item">
                        <span>@Info.Address @Info.City @Info.State @Info.Zip</span>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Info.Subtitle1) && !string.IsNullOrWhiteSpace(Info.Phone))
                {
                    <div class="info-item">
                        <strong>@Info.Subtitle1:</strong> @Info.Phone
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Info.Subtitle2) && !string.IsNullOrWhiteSpace(Info.Email))
                {
                    <div class="info-item">
                        <strong>@Info.Subtitle2:</strong> @Info.Email
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Info.Subtitle3) && !string.IsNullOrWhiteSpace(Info.Phone2))
                {
                    <div class="info-item">
                        <strong>@Info.Subtitle3:</strong> @Info.Phone2
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Info.Phone3))
                {
                    <div class="info-item">
                        <strong>Phone 3:</strong> @Info.Phone3
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Info.StoreManager) || !string.IsNullOrWhiteSpace(Info.AreaManager))
                {
                    <div class="info-item">
                        <div><strong>Manager:</strong> @Info.StoreManager</div>
                        <div><strong>Area:</strong> @Info.AreaManager</div>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Info.TManager1) || !string.IsNullOrWhiteSpace(Info.TManager2) ||
                            !string.IsNullOrWhiteSpace(Info.TManager3) || !string.IsNullOrWhiteSpace(Info.TManager4) ||
                            !string.IsNullOrWhiteSpace(Info.TManager5) || !string.IsNullOrWhiteSpace(Info.TManager6))
                {
                    <div class="info-item territory-item">
                        <div class="territory-table">
                            <div class="territory-header">
                                <div class="territory-header-cell">TERRITORY</div>
                                <div class="territory-header-cell">MANAGER</div>
                            </div>
                            <!-- Your existing territory rows here -->
                            @if (!string.IsNullOrWhiteSpace(Info.TManager1))
                            {
                                <div class="territory-row">
                                    <div class="territory-cell">@Info.Subtitle1</div>
                                    <div class="territory-cell">@Info.TManager1</div>
                                </div>
                            }
                            @if (!string.IsNullOrWhiteSpace(Info.TManager2))
                            {
                                <div class="territory-row">
                                    <div class="territory-cell">@Info.Subtitle2</div>
                                    <div class="territory-cell">@Info.TManager2</div>
                                </div>
                            }
                            @if (!string.IsNullOrWhiteSpace(Info.TManager3))
                            {
                                <div class="territory-row">
                                    <div class="territory-cell">@Info.Subtitle3</div>
                                    <div class="territory-cell">@Info.TManager3</div>
                                </div>
                            }
                            @if (!string.IsNullOrWhiteSpace(Info.TManager4))
                            {
                                <div class="territory-row">
                                    <div class="territory-cell">@Info.Subtitle4</div>
                                    <div class="territory-cell">@Info.TManager4</div>
                                </div>
                            }
                            @if (!string.IsNullOrWhiteSpace(Info.TManager5))
                            {
                                <div class="territory-row">
                                    <div class="territory-cell">@Info.Subtitle5</div>
                                    <div class="territory-cell">@Info.TManager5</div>
                                </div>
                            }
                            @if (!string.IsNullOrWhiteSpace(Info.TManager6))
                            {
                                <div class="territory-row">
                                    <div class="territory-cell">@Info.Subtitle6</div>
                                    <div class="territory-cell">@Info.TManager6</div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="search-section">
        <SearchBar ShowBackButton="!IsHomePage" />
    </div>
}

@code {
    [Parameter]
    public HeaderCardModels.HeadInfoCardModel? Info { get; set; }

    private bool IsHomePage
    {
        get
        {
            // Get the current path relative to the app's base URL
            var relativePath = NavManager.ToBaseRelativePath(NavManager.Uri);

            // Return true if the path is the root ("") OR if it's "home" (case-insensitive)
            return relativePath == "" || relativePath.Equals("home", StringComparison.OrdinalIgnoreCase);
        }
    }

    }

    <style>
    .header-container {
        background-color: var(--kendo-color-primary);
        color: white;
        width: 100%;
        height: 250px;
        display: flex;
        flex-direction: column;
    }

    .header-title {
        background-color: var(--kendo-color-primary);
        color: white;
        /* font-size: clamp(18px, 8vw, 48px); */
        font-size: clamp(16px, 4.5rem, 38px); /* Using rem units instead of vw */
        overflow: hidden;
        font-weight: bold;
        text-transform: uppercase;
        /* text-shadow: 3px 2px 1px #FDADA8; */
        text-align: center;
        padding: 4px 2px; /* Minimal padding */
        display: flex;
        align-items: center;
        justify-content: center;
        /* min-height: 50px; */ /* Just enough space for the title */
        line-height: 1;
        /* ADDED: Handle text wrapping better */
        /* word-break: break-word; */
        hyphens: auto;
        /* ADDED: Ensure minimum height for wrapped text */
        min-height: 60px;
    }



    .header-content {
        flex: 1;
        /* padding: 6px 0; */
        overflow: hidden;
        /* line-height: 0.5; */
        padding: 6px 1px;
    }

    .header-info-grid {
        display: flex;
        flex-direction: column;
        /* gap: 8px; */
        gap: 6px;
        /* font-size: 14px; */
    }

    .info-item {
        color: white;
    }

    .address-item {
        /* text-align: center; */
        font-size: 15px;
        margin-bottom: 5px;
    }

    .territory-item {
        /* margin-top: 10px; */
    }

    .search-section {
        flex-shrink: 0;
    }

    /* Keep your existing territory table CSS */
    .territory-table {
        width: 100%;
        margin-top: 5px;
    }

    .territory-header {
        display: grid;
        grid-template-columns: 1fr 1fr;
        background-color: rgba(255, 255, 255, 0.2);
        border-bottom: 2px solid white;
    }

    .territory-header-cell {
        padding: 8px 12px;
        font-weight: bold;
        text-align: center;
        color: white;
        font-size: 14px;
        letter-spacing: 1px;
    }

    .territory-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        border-bottom: 1px solid rgba(255, 255, 255, 0.3);
    }

        .territory-row:last-child {
            border-bottom: none;
        }

    .territory-cell {
        /* padding: 6px 12px; */
        padding: 5px 8px;
        color: white;
        font-size: 12px;
        line-height: 1.2;
    }

        .territory-cell:first-child {
            border-right: 1px solid rgba(255, 255, 255, 0.3);
            font-weight: 500;
        }

    /* ADDED: Responsive adjustments for smaller screens */
    

    .header-info-grid {
        gap: 4px;
        font-size: 13px;
    }

    .territory-header-cell,
    .territory-cell {
        padding: 4px 6px;
        font-size: 11px;
    }

    .grid {
        display: grid;
        grid-template-columns: 1fr;
        border: 3px solid transparent;
        border-radius: 0.375rem;
        padding-top: 0;
        padding-bottom: 0;
        margin-bottom: 0;
    }

        .grid h2 {
            text-align: center;
            white-space: nowrap;
            font-weight: 300;
            text-transform: uppercase;
            font-size: 1.875rem;
            line-height: 2.25rem;
            padding-top: 0.75rem;
            padding-left: 0.5rem;
            padding-right: 0.5rem;
            padding-bottom: 0.25rem;
            letter-spacing: 0.1em;
            border-bottom: 1px solid rgba(226, 232, 240, 0.2);
        }

    .divider {
        width: 100vw;
        padding: 0;
        margin: 0;
        border-bottom: 2px solid rgba(226, 232, 240, 0.2);
    }

    .table {
        table-layout: fixed;
        border-collapse: collapse;
    }

        .table tbody {
            margin-top: 2.5rem;
        }

        .table tr {
            font-size: 0.875rem;
            text-align: center;
            vertical-align: middle;
            padding-top: 0.375rem;
            padding-bottom: 0.375rem;
            border-bottom: 2px solid rgba(226, 232, 240, 0.2);
        }

        .table td {
            padding-top: 0.5rem;
            padding-bottom: 0.375rem;
            text-align: center;
            vertical-align: middle;
            width: auto;
        }

        .table .address {
            padding-right: 0;
            padding-left: 2.5rem;
            text-align: center;
            vertical-align: middle;
            width: auto;
        }

        .table .subtitle1 {
            padding-right: 0;
            padding-left: 2.5rem;
            text-align: center;
            vertical-align: middle;
            width: 50%;
            text-transform: uppercase;
            border-right: 2px solid rgba(226, 232, 240, 0.2);
        }

        .table .phone {
            padding-left: 0.5rem;
            text-align: left;
            vertical-align: middle;
            width: 50%;
            text-transform: lowercase;
        }

        .table .subtitle2 {
            padding-right: 0;
            padding-left: 2.5rem;
            text-align: center;
            vertical-align: middle;
            width: 50%;
            text-transform: uppercase;
            border-right: 2px solid rgba(226, 232, 240, 0.2);
        }

        .table .email {
            padding-left: 0.5rem;
            text-align: left;
            vertical-align: middle;
            width: 50%;
            font-size: 0.8125rem;
            text-transform: lowercase;
        }

        .table .subtitle3-phone2 {
            padding-right: 0.25rem;
            padding-left: 1rem;
            text-align: center;
            vertical-align: middle;
            border-bottom: 0;
            text-transform: uppercase;
        }
    </style>

@* @using Telerik.Blazor.Components
@using Telerik.Blazor
@using MMPD.Data.Models
@using MMPD.Data.Context
@using MMPD.Data.Data
@using MMPD.Shared.Components

@inject NavigationManager NavManager

@if (Info is not null)
{
    <div class="header-container">
        <!-- Title Section -->
        <div class="header-title">
            @Info.Title
        </div>

        <!-- Address -->
        @if (!string.IsNullOrWhiteSpace(Info.Address))
        {
            <div class="header-address">
                @Info.Address @Info.City @Info.State @Info.Zip
            </div>
        }

        <!-- Contact Information - Simple List -->
        <div class="contact-info">
            @if (!string.IsNullOrWhiteSpace(Info.Subtitle1) && !string.IsNullOrWhiteSpace(Info.Phone))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle1:</strong> @Info.Phone
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.Subtitle2) && !string.IsNullOrWhiteSpace(Info.Email))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle2:</strong> @Info.Email
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.Subtitle3) && !string.IsNullOrWhiteSpace(Info.Phone2))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle3:</strong> @Info.Phone2
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.Phone3))
            {
                <div class="contact-item">
                    <strong>Phone 3:</strong> @Info.Phone3
                </div>
            }

            <!-- Manager Information -->
            @if (!string.IsNullOrWhiteSpace(Info.StoreManager))
            {
                <div class="contact-item">
                    <strong>Manager:</strong> @Info.StoreManager
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.AreaManager))
            {
                <div class="contact-item">
                    <strong>Area Manager:</strong> @Info.AreaManager
                </div>
            }

            <!-- Territory Managers - Simplified -->
            @if (!string.IsNullOrWhiteSpace(Info.TManager1))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle1 Manager:</strong> @Info.TManager1
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.TManager2))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle2 Manager:</strong> @Info.TManager2
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.TManager3))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle3 Manager:</strong> @Info.TManager3
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.TManager4))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle4 Manager:</strong> @Info.TManager4
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.TManager5))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle5 Manager:</strong> @Info.TManager5
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(Info.TManager6))
            {
                <div class="contact-item">
                    <strong>@Info.Subtitle6 Manager:</strong> @Info.TManager6
                </div>
            }
        </div>

        <!-- Search Section -->
        <div class="search-section">
            <SearchBar ShowBackButton="!IsHomePage" />
        </div>
    </div>
}

@code {
    [Parameter]
    public HeaderCardModels.HeadInfoCardModel? Info { get; set; }

    private bool IsHomePage
    {
        get
        {
            var relativePath = NavManager.ToBaseRelativePath(NavManager.Uri);
            return relativePath == "" || relativePath.Equals("home", StringComparison.OrdinalIgnoreCase);
        }
    }
}

<style>
    .header-container {
        background-color: #FF6B6B; /* Coral/salmon color like your app */
        color: white;
        width: 100%;
        padding: 24px 28px;
        display: flex;
        flex-direction: column;
        gap: 8px;
        min-height: 200px;
    }

    .header-title {
        color: white;
        font-size: clamp(24px, 4vw, 42px);
        font-weight: bold;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 12px;
        line-height: 1.1;
    }

    .header-address {
        color: white;
        font-size: clamp(16px, 2.5vw, 20px);
        margin-bottom: 8px;
        font-weight: normal;
    }

    .contact-info {
        display: flex;
        flex-direction: column;
        gap: 4px;
        margin-bottom: 16px;
    }

    .contact-item {
        color: white;
        font-size: clamp(14px, 2vw, 18px);
        line-height: 1.4;
        font-weight: normal;
    }

        .contact-item strong {
            font-weight: 600;
        }

    .search-section {
        margin-top: auto;
        padding-top: 12px;
    }

        /* Make search bar match the design */
        .search-section :deep(.search-container) {
            background: transparent;
        }

        .search-section :deep(input) {
            background: white;
            border: none;
            border-radius: 4px;
            padding: 12px 16px;
            font-size: 16px;
            color: #333;
        }

        .search-section :deep(.search-button) {
            background-color: #E55555;
            border: none;
            border-radius: 4px;
            color: white;
            padding: 12px 16px;
            margin-left: 8px;
        }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .header-container

    {
        padding: 20px 16px;
        gap: 6px;
    }

    .header-title {
        font-size: clamp(20px, 6vw, 32px);
        margin-bottom: 8px;
    }

    .header-address {
        font-size: clamp(14px, 4vw, 18px);
    }

    .contact-item {
        font-size: clamp(13px, 3vw, 16px);
    }

    }

    @media (max-width: 480px) {
        .contact-item

    {
        font-size: 13px;
        line-height: 1.3;
    }

    }
</style> *@


